# scripts/full_reset.py

import sys
import os
from sqlalchemy import text
from app import create_app, db
from app.models import Product

app = create_app()

def reset_and_populate():
    with app.app_context():
        print("üì¶ Cr√©ation des tables (si inexistantes)...")
        db.create_all()

        # V√©rifie si la table 'products' existe bien
        inspector = db.inspect(db.engine)
        if 'product' not in inspector.get_table_names():
            print("‚ùå Table 'product' non trouv√©e. Assure-toi que le mod√®le est correct.")
            return

        # Nettoyage s√©curis√© selon le type de base
        database_url = app.config['SQLALCHEMY_DATABASE_URI']
        try:
            if database_url.startswith("sqlite"):
                print("‚ö° Base SQLite ‚ûî DELETE FROM...")
                db.session.execute(text("DELETE FROM product;"))
            else:
                print("‚ö° Base PostgreSQL ‚ûî TRUNCATE TABLE...")
                db.session.execute(text("TRUNCATE TABLE product RESTART IDENTITY CASCADE;"))
            db.session.commit()
            print("‚úÖ Table 'product' vid√©e.")
        except Exception as e:
            print(f"‚ùå Erreur pendant la suppression : {e}")
            return

        # Remplissage des produits avec model_url
        produits = [
            Product(
                name="Machine √† Caf√©",
                description="Machine professionnelle pour caf√©s gourmets",
                price=250.0,
                model_url="https://drive.google.com/uc?export=download&id=1Oq_vVepdhZqbhX2Gm7nVcQqttLrlwZWQ"
            ),
            Product(
                name="Cappuccino",
                description="A cup_of_cappuccino",
                price=50.0,
                model_url="https://drive.google.com/uc?export=download&id=1PsD-QhE0z1R-v4mcY8-W0CFw746oLUXl"
            ),
            Product(
                name="Th√© Vert",
                description="Th√© bio rafra√Æchissant",
                price=2.5,
                model_url=""
            ),
        ]

        try:
            db.session.add_all(produits)
            db.session.commit()
            print("‚úÖ Produits ins√©r√©s avec succ√®s.")
        except Exception as e:
            print(f"‚ùå √âchec insertion des produits : {e}")

if __name__ == "__main__":
    # Assure l'acc√®s au module 'app' depuis scripts/
    sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
    reset_and_populate()
