# scripts/init_db_on_startup.py
import os
import sys

sys.path.append(os.path.dirname(os.path.abspath(__file__)))
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))

from app import create_app, db
from app.models import Product
from sqlalchemy.exc import OperationalError
from dotenv import load_dotenv

load_dotenv()

app = create_app()

def table_exists(table_name: str) -> bool:
    """V√©rifie si une table existe dans la base."""
    inspector = db.inspect(db.engine)
    return table_name in inspector.get_table_names()

def product_table_is_empty() -> bool:
    """V√©rifie si la table Product est vide."""
    return Product.query.count() == 0

def insert_default_products():
    """Ins√®re des produits par d√©faut si la table est vide."""
    produits = [
        Product(
            name="Machine √† Caf√©",
            description="Machine professionnelle pour caf√©s gourmets",
            price=250.0,
            model_url="https://drive.google.com/uc?export=download&id=1Oq_vVepdhZqbhX2Gm7nVcQqttLrlwZWQ"
        ),
        Product(
            name="Cappuccino",
            description="D√©licieux cappuccino cr√©meux avec une touche de cacao",
            price=50.0,
            model_url="https://drive.google.com/uc?export=download&id=1PsD-QhE0z1R-v4mcY8-W0CFw746oLUXl"
        ),
        Product(
            name="Th√© Vert",
            description="Th√© bio rafra√Æchissant",
            price=2.5,
            model_url=""
        ),
    ]
    db.session.add_all(produits)
    db.session.commit()
    print("‚úÖ Produits par d√©faut ins√©r√©s.")

def init_db_on_startup():
    """Point d'entr√©e : cr√©e les tables si besoin et ins√®re les donn√©es."""
    with app.app_context():
        try:
            print("üîé V√©rification de la base de donn√©es...")

            if not table_exists("users") or not table_exists("product"):
                print("üì¶ Cr√©ation des tables n√©cessaires...")
                db.create_all()
                print("‚úÖ Tables cr√©√©es avec succ√®s.")
            else:
                print("‚úîÔ∏è Tables d√©j√† existantes.")

            if product_table_is_empty():
                print("üì≠ Table 'product' vide ‚ûú insertion des donn√©es...")
                insert_default_products()
            else:
                print("‚úîÔ∏è Table 'product' d√©j√† peupl√©e.")

        except OperationalError as e:
            print(f"‚ùå Erreur de connexion √† la base : {e}")
        except Exception as e:
            print(f"‚ùå Erreur pendant l'initialisation : {e}")

if __name__ == "__main__":
    init_db_on_startup()
